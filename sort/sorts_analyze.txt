1. 排序的基本概念
   (1) 稳定性: 如果原序列中相同元素的相对顺序在排序前和排序后保持不变，则称该排序算法具有稳定性，
               否则具有不稳定性。
   (2) 算法复杂度分析: 主要从时间复杂度和空间复杂度来分析。
                       时间复杂度是算法中所有语句的频度之和，主要包括比较次数和交换次数。
                       空间复杂度是算法在计算机内执行时所需存储空间的度量。


2. 排序算法的复杂度比较
   排序方法           稳定性    最好时间    平均时间    最坏时间    平均空间
   冒泡排序           稳定      O(n)        O(n^2)      O(n^2)      O(1)
   桶排序             稳定                 O(n+n*(logn-logm))      O(n+m)
   计数排序           稳定                  O(n)                    O(m)
   堆排序             不稳定    O(nlogn)    O(nlogn)    O(nlogn)    O(1)
   插入排序           稳定      O(n)        O(n^2)      O(n^2)      O(1)
   二分插入排序        稳定      O(n^2)      O(n^2)      O(n^2)      O(1)
   二路插入排序        稳定      O(n)        O(n^2)      O(n^2)      O(n)
   归并排序           稳定      O(nlogn)    O(nlogn)    O(nlogn)    O(n)
   非递归归并排序      稳定      O(nlogn)    O(nlogn)    O(nlogn)    O(n)
   快速排序           不稳定    O(nlogn)    O(nlogn)    O(n^2)      O(logn)
   非递归快速排序      不稳定    O(nlogn)    O(nlogn)    O(n^2)      O(logn)
   基数排序           稳定      O(d(n+r))   O(d(n+r))   O(d(n+r))   O(r+n)
   选择排序           不稳定    O(n^2)      O(n^2)      O(n^2)      O(1)
   希尔排序           不稳定                O(n^1.5)                O(1)


3. 排序分类
   (1) 按功能分类
       选择类排序: 选择排序，堆排序。
       交换类排序: 冒泡排序，快速排序。
       插入类排序: 插入排序，希尔排序。
       其它类排序: 基数排序，归并排序，桶排序，计数排序。
   (2) 按平均时间复杂度分类
       O(n): 基数排序、桶排序、计数排序。
       O(nlogn): 快速排序、堆排序、归并排序。
       O(n^(1+i)): 0 < i < 1，希尔排序。
       O(n^2): 选择排序、插入排序、冒泡排序。
   (3) 按稳定性分类
       稳定性: 插入排序、冒泡排序、归并排序、基数排序、桶排序、计数排序。
       不稳定性: 选择排序、快速排序、堆排序、希尔排序。


4. 排序方法选择
   (1) 如果n较小(如n <= 50)，可以使用选择排序、插入排序、冒泡排序。
   (2) 如果n较大，可以使用快速排序、堆排序、归并排序，它们的平均时间复杂度都是O(nlogn)。
   (3) 如果序列基本有序(指正序)，可以使用插入排序、冒泡排序、快速排序。
   (4) 如果比较好计算待排序序列中每个数据元素在最终有序序列中的位置，可以使用计数排序。
   (5) 如果待排序序列中的数据元素值处在一个不是非常大的范围中且在该范围中的数据元素值分布较均匀，
       可以使用桶排序、基数排序。

5. 排序算法比较
   (1) 冒泡排序 PK 选择排序
       比较次数: 冒泡排序比选择排序少很多。
       交换次数: 选择排序比冒泡排序少很多。
   (2) 桶排序 PK 基数排序
       桶排序是基于一个关键字的排序，基数排序是基于多个关键字的排序。
       它们都是根据待排序序列的独特特点来排序的。
       基数排序一般是针对按整数的个位、十位、百位等桶来排序的问题，其它的问题基本上都可以考虑用桶排序。
